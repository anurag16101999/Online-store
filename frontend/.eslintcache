[{"G:\\WebD\\ecommerce-mern\\frontend\\src\\index.js":"1","G:\\WebD\\ecommerce-mern\\frontend\\src\\App.js":"2","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Footer.js":"3","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Header.js":"4","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\HomeScreen.js":"5","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Product.js":"6","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Rating.js":"7","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\ProductScreen.js":"8","G:\\WebD\\ecommerce-mern\\frontend\\src\\store.js":"9","G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\productReducers.js":"10","G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\productConstants.js":"11","G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\productActions.js":"12","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Loader.js":"13","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Message.js":"14","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\CartScreen.js":"15","G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\cartReducers.js":"16","G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\cartConstants.js":"17","G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\cartActions.js":"18","G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\userReducers.js":"19","G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\userConstants.js":"20","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\LoginScreen.js":"21","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\FormContainer.js":"22","G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\userActions.js":"23","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\RegisterScreen.js":"24","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\ProfileScreen.js":"25","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\ShippingScreen.js":"26","G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\CheckoutSteps.js":"27","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\PaymentScreen.js":"28","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\orderReducer.js":"30","G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\orderActions.js":"31","G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\orderConstants.js":"32","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\OrderScreen.js":"33"},{"size":316,"mtime":1610970444534,"results":"34","hashOfConfig":"35"},{"size":1575,"mtime":1611229696621,"results":"36","hashOfConfig":"35"},{"size":333,"mtime":1610690919148,"results":"37","hashOfConfig":"35"},{"size":1853,"mtime":1611149950308,"results":"38","hashOfConfig":"35"},{"size":1054,"mtime":1610974455141,"results":"39","hashOfConfig":"35"},{"size":836,"mtime":1610700451966,"results":"40","hashOfConfig":"35"},{"size":1856,"mtime":1610717150209,"results":"41","hashOfConfig":"35"},{"size":3927,"mtime":1611028300478,"results":"42","hashOfConfig":"35"},{"size":1731,"mtime":1611237127036,"results":"43","hashOfConfig":"35"},{"size":1040,"mtime":1610974959038,"results":"44","hashOfConfig":"35"},{"size":374,"mtime":1610974742859,"results":"45","hashOfConfig":"35"},{"size":1223,"mtime":1610975938102,"results":"46","hashOfConfig":"35"},{"size":411,"mtime":1611028385716,"results":"47","hashOfConfig":"35"},{"size":256,"mtime":1611031184454,"results":"48","hashOfConfig":"35"},{"size":3561,"mtime":1611149777440,"results":"49","hashOfConfig":"35"},{"size":1303,"mtime":1611024158219,"results":"50","hashOfConfig":"35"},{"size":289,"mtime":1611023147510,"results":"51","hashOfConfig":"35"},{"size":1332,"mtime":1611025092893,"results":"52","hashOfConfig":"35"},{"size":3653,"mtime":1611133408084,"results":"53","hashOfConfig":"35"},{"size":1534,"mtime":1611133191708,"results":"54","hashOfConfig":"35"},{"size":2231,"mtime":1611151356825,"results":"55","hashOfConfig":"35"},{"size":352,"mtime":1611135654743,"results":"56","hashOfConfig":"35"},{"size":3949,"mtime":1611205956049,"results":"57","hashOfConfig":"35"},{"size":3244,"mtime":1611151157511,"results":"58","hashOfConfig":"35"},{"size":5318,"mtime":1611205425496,"results":"59","hashOfConfig":"35"},{"size":2608,"mtime":1611210453780,"results":"60","hashOfConfig":"35"},{"size":1300,"mtime":1611210029169,"results":"61","hashOfConfig":"35"},{"size":1828,"mtime":1611215012996,"results":"62","hashOfConfig":"35"},{"size":5189,"mtime":1611223303167,"results":"63","hashOfConfig":"35"},{"size":3526,"mtime":1611222010565,"results":"64","hashOfConfig":"35"},{"size":5822,"mtime":1611222282970,"results":"65","hashOfConfig":"35"},{"size":1286,"mtime":1611221950282,"results":"66","hashOfConfig":"35"},{"size":6689,"mtime":1611245483470,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1kj7sex",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},"G:\\WebD\\ecommerce-mern\\frontend\\src\\index.js",[],["138","139"],"G:\\WebD\\ecommerce-mern\\frontend\\src\\App.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Footer.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Header.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\HomeScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Product.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Rating.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\ProductScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\store.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\productReducers.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\productConstants.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\productActions.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Loader.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\Message.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\CartScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\cartReducers.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\cartConstants.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\cartActions.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\userReducers.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\userConstants.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\LoginScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\FormContainer.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\userActions.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\RegisterScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\ProfileScreen.js",["140","141"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  //console.log(userDetails);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {/* {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )} */}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\ShippingScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\components\\CheckoutSteps.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\PaymentScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\reducers\\orderReducer.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\actions\\orderActions.js",[],["142","143"],"G:\\WebD\\ecommerce-mern\\frontend\\src\\constants\\orderConstants.js",[],"G:\\WebD\\ecommerce-mern\\frontend\\src\\screens\\OrderScreen.js",["144"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  // const userLogin = useSelector((state) => state.userLogin);\r\n  // const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if (!userInfo) {\r\n    //   history.push(\"/login\");\r\n    // }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":15},{"ruleId":"149","severity":1,"message":"153","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":23},{"ruleId":"145","replacedBy":"154"},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","severity":1,"message":"156","line":5,"column":44,"nodeType":"151","messageId":"152","endLine":5,"endColumn":50},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'LinkContainer' is defined but never used.",["157"],["158"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]